// -------------------------------------------------------------
// 
// File Name: /Users/koer2434/My Drive/UST/research/covg/manuscripts/control_system/secord_memos/obersver_nov_update/codegen/matrix_mul_fixedpt/hdlsrc/matrix_mul_fixedpt_fixpt.v
// Created: 2022-12-13 08:05:52
// 
// Generated by MATLAB 9.12, MATLAB Coder 5.4 and HDL Coder 3.20
// 
// 
// 
// -- -------------------------------------------------------------
// -- Rate and Clocking Details
// -- -------------------------------------------------------------
// Design base rate: 0.025
// Explicit user oversample request: 40x
// 
// 
// Clock Enable  Sample Time
// -- -------------------------------------------------------------
// ce_out        1
// -- -------------------------------------------------------------
// 
// 
// Output Signal                 Clock Enable  Sample Time
// -- -------------------------------------------------------------
// out_0                         ce_out        1
// out_1                         ce_out        1
// -- -------------------------------------------------------------
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: matrix_mul_fixedpt_fixpt
// Source Path: matrix_mul_fixedpt_fixpt
// Hierarchy Level: 0
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module matrix_mul_fixpt
          (clk,
           reset,
           clk_enable,
           A_0,
           A_1,
           A_2,
           A_3,
           B_0,
           B_1,
           ce_out,
           out_0,
           out_1);


  input   clk;
  input   reset;
  input   clk_enable;
  input   signed [15:0] A_0;  // sfix16_En15
  input   signed [15:0] A_1;  // sfix16_En15
  input   signed [15:0] A_2;  // sfix16_En15
  input   signed [15:0] A_3;  // sfix16_En15
  input   signed [15:0] B_0;  // sfix16_En15
  input   signed [15:0] B_1;  // sfix16_En15
  output  ce_out;
  output  signed [32:0] out_0;  // sfix33_En30
  output  signed [32:0] out_1;  // sfix33_En30


  wire enb_1_1_1;
  wire enb_40_1_0;
  wire signed [15:0] A [0:3];  // sfix16_En15 [4]
  wire signed [15:0] B [0:1];  // sfix16_En15 [2]
  reg signed [32:0] out [0:1];  // sfix33_En30 [2]
  wire clk_enable_1;
  reg signed [31:0] matrix_mul_fixedpt_fixpt_k;  // int32
  reg signed [31:0] matrix_mul_fixedpt_fixpt_l;  // int32
  reg signed [32:0] matrix_mul_fixedpt_fixpt_slice_temp;  // sfix33_En30
  reg signed [33:0] matrix_mul_fixedpt_fixpt_add_cast [0:1];  // sfix34_En30 [2]
  reg signed [63:0] matrix_mul_fixedpt_fixpt_add_cast_0 [0:1];  // sfix64 [2]
  reg signed [31:0] matrix_mul_fixedpt_fixpt_mul_temp [0:1];  // sfix32_En30 [2]
  reg signed [33:0] matrix_mul_fixedpt_fixpt_add_cast_1 [0:1];  // sfix34_En30 [2]
  reg signed [33:0] matrix_mul_fixedpt_fixpt_add_temp [0:1];  // sfix34_En30 [2]


  assign A[0] = A_0;
  assign A[1] = A_1;
  assign A[2] = A_2;
  assign A[3] = A_3;

  assign B[0] = B_0;
  assign B[1] = B_1;

  always @* begin
    matrix_mul_fixedpt_fixpt_slice_temp = 33'sh000000000;
    //HDL code generation from MATLAB function: matrix_mul_fixedpt_fixpt
    //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    //                                                                          %
    //          Generated by MATLAB 9.12 and Fixed-Point Designer 7.4           %
    //                                                                          %
    //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    // Lucas Koerner 
    // 2022/12/06
    // fixed point design of 2x2 * 2x1 matrix multiplication
    // inputs 
    // A,B
    // this is a Nx1 vector so reshape is uncessary 

    for(matrix_mul_fixedpt_fixpt_l = 32'sd0; matrix_mul_fixedpt_fixpt_l <= 32'sd1; matrix_mul_fixedpt_fixpt_l = matrix_mul_fixedpt_fixpt_l + 32'sd1) begin
      matrix_mul_fixedpt_fixpt_slice_temp = 33'sh000000000;

      for(matrix_mul_fixedpt_fixpt_k = 32'sd0; matrix_mul_fixedpt_fixpt_k <= 32'sd1; matrix_mul_fixedpt_fixpt_k = matrix_mul_fixedpt_fixpt_k + 32'sd1) begin
        matrix_mul_fixedpt_fixpt_add_cast[matrix_mul_fixedpt_fixpt_k] = {matrix_mul_fixedpt_fixpt_slice_temp[32], matrix_mul_fixedpt_fixpt_slice_temp};
        matrix_mul_fixedpt_fixpt_add_cast_0[matrix_mul_fixedpt_fixpt_k] = {{31{matrix_mul_fixedpt_fixpt_k[31]}}, {matrix_mul_fixedpt_fixpt_k, 1'b0}};
        matrix_mul_fixedpt_fixpt_mul_temp[matrix_mul_fixedpt_fixpt_k] = A[matrix_mul_fixedpt_fixpt_l + matrix_mul_fixedpt_fixpt_add_cast_0[matrix_mul_fixedpt_fixpt_k]] * B[matrix_mul_fixedpt_fixpt_k];
        matrix_mul_fixedpt_fixpt_add_cast_1[matrix_mul_fixedpt_fixpt_k] = {{2{matrix_mul_fixedpt_fixpt_mul_temp[matrix_mul_fixedpt_fixpt_k][31]}}, matrix_mul_fixedpt_fixpt_mul_temp[matrix_mul_fixedpt_fixpt_k]};
        matrix_mul_fixedpt_fixpt_add_temp[matrix_mul_fixedpt_fixpt_k] = matrix_mul_fixedpt_fixpt_add_cast[matrix_mul_fixedpt_fixpt_k] + matrix_mul_fixedpt_fixpt_add_cast_1[matrix_mul_fixedpt_fixpt_k];
        matrix_mul_fixedpt_fixpt_slice_temp = matrix_mul_fixedpt_fixpt_add_temp[matrix_mul_fixedpt_fixpt_k][32:0];
      end

      out[matrix_mul_fixedpt_fixpt_l] = matrix_mul_fixedpt_fixpt_slice_temp;
    end

  end



  assign out_0 = out[0];

  assign out_1 = out[1];

  matrix_mul_fixpt_enb_bypass u_matrix_mul_fixpt_enb_bypass (.clk_1(clk),
                                                                             .reset_1(reset),
                                                                             .clk_enable_1(clk_enable),
                                                                             .clk_enable_2(clk_enable_1)
                                                                             );

  matrix_mul_fixpt_tc u_matrix_mul_fixpt_tc (.clk(clk),
                                                             .reset(reset),
                                                             .clk_enable(clk_enable_1),
                                                             .enb_40_1_0(enb_40_1_0),
                                                             .enb_1_1_1(enb_1_1_1)
                                                             );

  assign ce_out = enb_1_1_1;

endmodule  // matrix_mul_fixedpt_fixpt

