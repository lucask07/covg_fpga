function y = BesselApproxFIR(x)
%BESSELAPPROXFIR Filters input x and returns output y.

% MATLAB Code
% Generated by MATLAB(R) 9.9 and DSP System Toolbox 9.11.
% Generated on: 21-Jun-2021 11:02:31

%#codegen

% To generate C/C++ code from this function use the codegen command.
% Type 'help codegen' for more information.

persistent Hd;

if isempty(Hd)
    
    % FIR maximally flat Lowpass filter designed using the MAXFLAT function.
    
    % All frequency values are in Hz.
    Fs = 5000000;  % Sampling Frequency
    
    N  = 2;       % Order
    Fc = 200000;  % Cutoff Frequency
    
    %% Calculate the second-order sections coefficients to avoid round-off
    %errors.
    [b,a,b1,b2,sos_var,g] = maxflat(N, 'sym', Fc/(Fs/2));
    Hd = dsp.BiquadFilter( ...
        'Structure', 'Direct form II', ...
        'SOSMatrix', sos_var, ...
        'ScaleValues', g, ...
        'SectionInputDataType', 'Custom', ...
        'CustomSectionInputDataType', numerictype([],16,11), ...
        'SectionOutputDataType', 'Custom', ...
        'CustomSectionOutputDataType', numerictype([],16,12), ...
        'NumeratorCoefficientsDataType', 'Custom', ...
        'CustomNumeratorCoefficientsDataType', numerictype([],16,15), ...
        'DenominatorCoefficientsDataType', 'Custom', ...
        'CustomDenominatorCoefficientsDataType', numerictype([],16,14), ...
        'ScaleValuesDataType', 'Custom', ...
        'CustomScaleValuesDataType', numerictype([],16,15), ...
        'NumeratorProductDataType', 'Custom', ...
        'CustomNumeratorProductDataType', numerictype([],32,30), ...
        'DenominatorProductDataType', 'Custom', ...
        'CustomDenominatorProductDataType', numerictype([],32,29), ...
        'NumeratorAccumulatorDataType', 'Custom', ...
        'CustomNumeratorAccumulatorDataType', numerictype([],34,30), ...
        'DenominatorAccumulatorDataType', 'Custom', ...
        'CustomDenominatorAccumulatorDataType', numerictype([],34,29), ...
        'StateDataType', 'Custom', ...
        'CustomStateDataType', numerictype([],16,15), ...
        'OutputDataType', 'Custom', ...
        'CustomOutputDataType', numerictype([],14,10), ...
        'RoundingMethod', 'Convergent');
end

s = fi(x,1,16,0,'RoundingMethod','Round','OverflowAction','Saturate');
y = step(Hd,s);


% [EOF]
end